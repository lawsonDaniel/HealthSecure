/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

  import { Contract, Interface, type ContractRunner } from "ethers";
  import type { IHealthConsent, IHealthConsentInterface } from "../../MedicalRecords.sol/IHealthConsent.js";

  const _abi = [
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_patient",
        "type": "address"
      }
    ],
    "name": "getConsent",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      },
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      },
      {
        "internalType": "string",
        "name": "",
        "type": "string"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
] as const;

  export class IHealthConsent__factory {
    static readonly abi = _abi;
    static createInterface(): IHealthConsentInterface {
      return new Interface(_abi) as IHealthConsentInterface;
    }
    static connect(address: string, runner?: ContractRunner | null): IHealthConsent {
      return new Contract(address, _abi, runner) as unknown as IHealthConsent;
    }
  }
  